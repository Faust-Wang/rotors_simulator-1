<?xml version="1.0"?>
<!--
  Copyright 2015 Fadri Furrer, ASL, ETH Zurich, Switzerland
  Copyright 2015 Michael Burri, ASL, ETH Zurich, Switzerland
  Copyright 2015 Mina Kamel, ASL, ETH Zurich, Switzerland
  Copyright 2015 Janosch Nikolic, ASL, ETH Zurich, Switzerland
  Copyright 2015 Markus Achtelik, ASL, ETH Zurich, Switzerland

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->

<robot xmlns:xacro="http://ros.org/wiki/xacro">
  <!-- Macro for the inertia of a box -->
  <xacro:macro name="box_inertia" params="x y z mass">
    <inertia ixx="${0.0833333 * mass * (y*y + z*z)}" ixy="0.0" ixz="0.0"
      iyy="${0.0833333 * mass * (x*x + z*z)}" iyz="0.0"
      izz="${0.0833333 * mass * (x*x + y*y)}" />
  </xacro:macro>

  <!-- Macro for the inertial properties of a box -->
  <xacro:macro name="box_inertial" params="x y z mass *origin">
    <inertial>
      <mass value="${mass}" />
      <xacro:insert_block name="origin" />
      <xacro:box_inertia x="${x}" y="${y}" z="${z}" mass="${mass}" />
    </inertial>
  </xacro:macro>

  <!-- Fixed-wing fuselage link -->
  <xacro:macro name="fixed_wing_base_macro"
    params="robot_namespace mass body_length body_width body_height use_mesh_file mesh_file *inertia">
    <link name="${robot_namespace}/base_link"></link>

    <joint name="${robot_namespace}/base_joint" type="fixed">
      <origin xyz="0 0 0" rpy="0 0 0" />
      <parent link="${robot_namespace}/base_link" />
      <child link="${robot_namespace}/base_link_inertia" />
    </joint>

    <link name="${robot_namespace}/base_link_inertia">
      <inertial>
        <mass value="${mass}" />  <!-- [kg] -->
        <origin xyz="0 0 0" />
        <xacro:insert_block name="inertia" />
      </inertial>
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0" />
        <geometry>
          <xacro:if value="${use_mesh_file}">
            <mesh filename="${mesh_file}" scale="1 1 1" />
          </xacro:if>
          <xacro:unless value="${use_mesh_file}">
            <box size="${body_length} ${body_width} ${body_height}"/> <!-- [m] [m] [m] -->
          </xacro:unless>
        </geometry>
      </visual>
      <collision>
        <origin xyz="0 0 0" rpy="0 0 0" />
        <geometry>
          <box size="${body_length} ${body_width} ${body_height}" /> <!-- [m] [m] [m] -->
        </geometry>
      </collision>
    </link>

    <gazebo>
      <plugin name="fixed_wing_base_plugin" filename="librotors_gazebo_fixedwing_base_plugin.so">
        <robotNamespace>${robot_namespace}</robotNamespace>
        <linkName>${robot_namespace}/base_link</linkName>
      </plugin>
    </gazebo>
  </xacro:macro>

  <!-- Wing joint and link -->
  <xacro:macro name="wing"
    params="robot_namespace suffix parent mass_wing wing_length wing_width wing_height 
      use_mesh mesh alpha_0 alpha_stall c_L_alpha air_density *origin *inertia">

    <joint name="${robot_namespace}/wing_${suffix}_joint" type="revolute">
      <xacro:insert_block name="origin" />
      <axis xyz="0 0 1" />
      <parent link="${parent}" />
      <child link="${robot_namespace}/wing_${suffix}" />
      <limit upper="0" lower="0" effort="0" velocity="0" />
    </joint>

    <link name="${robot_namespace}/wing_${suffix}">
      <inertial>
        <mass value="${mass_wing}" /> <!-- [kg] -->
        <xacro:insert_block name="inertia" />
      </inertial>
      <visual>
        <geometry>
          <xacro:if value="${use_mesh}">
            <mesh filename="${mesh}"
              scale="1 1 1" />
          </xacro:if>
          <xacro:unless value="${use_mesh}">
            <box size="${wing_length} ${wing_width} ${wing_height}"/> <!-- [m] [m] [m] -->
          </xacro:unless>
        </geometry>
      </visual>
      <collision>
        <geometry>
          <box size="${wing_length} ${wing_width} ${wing_height}"/> <!-- [m] [m] [m] -->
        </geometry>
      </collision>
    </link>

    <gazebo>
      <plugin name="${robot_namespace}_${suffix}_wing_model" filename="librotors_gazebo_wing_model.so">
        <robotNamespace>${robot_namespace}</robotNamespace>
        <linkName>${robot_namespace}/wing_${suffix}</linkName>
        <alpha0>${alpha_0}</alpha0> <!-- the starting angle of attack [deg] -->
        <alphaStall>${alpha_stall}</alphaStall> <!-- stall angle [deg] -->
        <cLAlpha>${c_L_alpha}</cLAlpha> <!-- coefficient of lift to angle of attack ratio -->
        <airDensity>${air_density}</airDensity> <!-- air density [kg/m^3] -->
        <wingArea>${wing_length * wing_width}</wingArea> <!-- area of the wing [m^2] -->
      </plugin>
    </gazebo>
  </xacro:macro>
</robot>
